<!-- زر فتح المودال -->
<button data-modal-target="default-modal" data-modal-toggle="default-modal"
    class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center"
    type="button" id="toggleModule">
    Add New Quarter Target
</button>

<!-- المودال -->
<div id="default-modal" tabindex="-1" aria-hidden="true"
    class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-990 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative p-4 w-full max-w-2xl max-h-full">
        <div class="relative bg-white rounded-lg shadow-sm">
            <!-- الهيدر -->
            <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t border-gray-200">
                <h3 class="text-xl font-semibold text-gray-900">
                    Add New Quarter Target
                </h3>
                <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
                    data-modal-hide="default-modal">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>
            </div>

            <!-- الفورم -->
            <form method="post" action="/salesKPIs/target/add">
                <div class="p-4 md:p-5 space-y-4">

                    <!-- اختيار الربع -->
                    <div>
                        <label for="quarterId" class="block mb-2 text-sm font-medium text-gray-900">Select
                            Quarter</label>
                        <select id="quarterId" name="quarterId" class="w-full px-4 py-2 border rounded-xl">
                            <% quarter.forEach(q=> { %>
                                <option value="<%= q._id %>" data-months='<%= JSON.stringify(q.months) %>'
                                    data-year="<%= q.year %>" data-department="<%= department._id %>">
                                    <%= q.year %> - <%= q.quarter %>
                                </option>
                            <% }) %>
                        </select>
                    </div>

                    <!-- تاريخ البداية -->
                    <div>
                        <label for="startDate" class="block mb-2 text-sm font-medium text-gray-900">Start date</label>
                        <input type="date" name="startDate" id="startDate" readonly
                            class="w-full px-4 py-2 border rounded-xl bg-gray-200">
                    </div>

                    <!-- تاريخ النهاية -->
                    <div>
                        <label for="endDate" class="block mb-2 text-sm font-medium text-gray-900">End date</label>
                        <input type="date" name="endDate" id="endDate" readonly
                            class="w-full px-4 py-2 border rounded-xl bg-gray-200">
                    </div>

                    <!-- التارقت -->
                    <div>
                        <label for="displayTarget" class="block mb-2 text-sm font-medium text-gray-900">Quarter Total
                            Target</label>
                        <input type="text" id="displayTarget" placeholder="مثال: 120,000"
                            class="w-full px-4 py-2 border rounded-xl" />
                        <input type="hidden" name="totalTarget" id="totalTarget" required />
                    </div>

                    <!-- التيرمز -->
                    <div id="termsPreview" class="hidden">
                        <label class="block mb-2 text-sm font-medium text-gray-900">Terms for this Department:</label>
                        <table class="w-full text-sm text-right text-gray-700 border border-gray-300 rounded">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th class="px-4 py-2 border">#</th>
                                    <th class="px-4 py-2 border">Term</th>
                                    <th class="px-4 py-2 border">Weight (%)</th>
                                </tr>
                            </thead>
                            <tbody id="termsList"></tbody>
                            <tfoot>
                                <tr class="bg-gray-50 font-semibold">
                                    <td colspan="2" class="px-4 py-2 border text-left">Total</td>
                                    <td class="px-4 py-2 border text-gray-900" id="totalWeight">0%</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                </div>

                <!-- زر الإرسال -->
                <div class="flex items-center p-4 md:p-5 border-t border-gray-200 rounded-b justify-center">
                    <button data-modal-hide="default-modal" type="submit"
                        class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
                        Add
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- السكربتات -->
<script>
    const startDateInput = document.getElementById("startDate");
    const endDateInput = document.getElementById("endDate");
    const quarterSelect = document.getElementById("quarterId");

    const displayTarget = document.getElementById("displayTarget");
    const totalTarget = document.getElementById("totalTarget");

    const monthMap = {
        "January": 0, "February": 1, "March": 2,
        "April": 3, "May": 4, "June": 5,
        "July": 6, "August": 7, "September": 8,
        "October": 9, "November": 10, "December": 11
    };

    quarterSelect.addEventListener("change", async () => {
        const selected = quarterSelect.options[quarterSelect.selectedIndex];
        const months = JSON.parse(selected.getAttribute("data-months"));
        const year = parseInt(selected.getAttribute("data-year"));
        const depId = selected.getAttribute("data-department");

        if (months.length === 3) {
            const start = new Date(year, monthMap[months[0]], 2);
            const end = new Date(year, monthMap[months[2]] + 1);

            if (!isNaN(start.getTime()) && !isNaN(end.getTime())) {
                startDateInput.value = start.toISOString().split("T")[0];
                endDateInput.value = end.toISOString().split("T")[0];
            }
        }

        if (depId) {
            const res = await fetch(`/salesKPIs/terms/by-department/${depId}`);
            const terms = await res.json();

            const preview = document.getElementById("termsPreview");
            const termsList = document.getElementById("termsList");
            const totalWeightCell = document.getElementById("totalWeight");
            termsList.innerHTML = "";
            let totalWeight = 0;

            if (terms.length) {
                const distributedWeight = Math.round((100 / terms.length) * 10) / 10;

                document.getElementById("termsData")?.remove();
                const input = document.createElement("input");
                input.type = "hidden";
                input.name = "termsData";
                input.id = "termsData";
                input.value = JSON.stringify(
                    terms.map((term, index) => {
                        const row = document.createElement("tr");
                        row.innerHTML = `
                            <td class="px-4 py-2 border text-center">${index + 1}</td>
                            <td class="px-4 py-2 border">${term.name}</td>
                            <td class="px-4 py-2 border text-center">${distributedWeight}%</td>
                        `;
                        termsList.appendChild(row);
                        totalWeight += distributedWeight;
                        return {
                            term: term._id,
                            weight: distributedWeight,
                            target: 0,
                            achieved: 0,
                            result: 0
                        };
                    })
                );
                totalWeightCell.textContent = `${totalWeight}%`;
                document.querySelector("form").appendChild(input);
                preview.classList.remove("hidden");
            } else {
                preview.classList.add("hidden");
            }
        }
    });

    function formatNumber(num) {
        return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    function cleanNumber(str) {
        return str.replace(/,/g, "");
    }

    displayTarget.addEventListener("input", () => {
        let raw = cleanNumber(displayTarget.value);
        if (!isNaN(raw)) {
            totalTarget.value = raw;
            displayTarget.value = formatNumber(raw);
        }
    });

    displayTarget.addEventListener("blur", () => {
        let raw = cleanNumber(displayTarget.value);
        if (!isNaN(raw)) {
            displayTarget.value = formatNumber(raw);
        }
    });

    const toggleButton = document.getElementById("toggleModule");
    toggleButton.addEventListener("click", () => {
        setTimeout(() => {
            const bgDark = document.querySelector("div.fixed.inset-0.z-40");
            if (bgDark) {
                bgDark.classList.remove("z-40");
                bgDark.classList.add("z-110");
            }
        }, 100);
    });

    window.addEventListener("DOMContentLoaded", () => {
        quarterSelect.dispatchEvent(new Event("change"));
    });
</script>
